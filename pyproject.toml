[tool.poetry]
name = "dominions-slack-bot"
version = "0.1.0"
description = "A slack bot to help manage and update dominions 5 games"
authors = ["Steven Kessler <stvnksslr@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
slack-bolt = "^1.18.1"
uvloop = "^0.19.0"
pydantic = "^2.6.0"
python-dotenv = "^1.0.1"
beautifulsoup4 = "^4.12.3"
aiohttp = { extras = ["speedups"], version = "^3.9.2" }
tortoise-orm = { extras = ["accel"], version = "^0.20.0" }
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.0"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
pytest-asyncio = "0.23.4"
aerich = "^0.7.2"
mypy = "^1.8.0"

[tool.poetry.group.types.dependencies]
types-beautifulsoup4 = "^4.12.0.20240106"

[tool.aerich]
tortoise_orm = "src.utils.db_manager.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
lint.ignore = [
    "B008", # function-call-in-default-argument (B008)
    "S101", # Use of `assert` detected
    "RET504", # Unnecessary variable assignment before `return` statement
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "ARG001", # Unused function argument: `{name}`
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "E501", # Checks for lines that exceed the specified maximum character length. / the dumb grog messages are too long
    "F401", # Checks for unused imports. / causes issues with init.py bundling modules
    "ISC001" # hecks for implicitly concatenated strings on a single line.
]
lint.select = [
    "A",
    "B",
    "E",
    "F",
    "N",
    "RET",
    "S",
    "W",
    "Q",
    "C90",
    "I",
    "UP",
    "BLE",
    "C4",
    "ISC",
    "ICN",
    "PT",
    "PIE",
    "T20",
    "SIM",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
]
exclude = [
    ".eggs",
    ".git",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    ".venv",
]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )
)
'''
