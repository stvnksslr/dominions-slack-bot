[project]
name = "dominions-slack-bot"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aerich==0.8.0",
    "aiohappyeyeballs==2.4.4",
    "aiohttp==3.11.10",
    "beautifulsoup4==4.12.3",
    "cryptography==44.0.0",
    "loguru==0.7.3",
    "pydantic==2.10.3",
    "python-dotenv==1.0.1",
    "slack-bolt==1.21.3",
    "tortoise-orm[asyncmy]==0.22.2",
    "uvloop==0.21.0",
]

[tool.uv]
dev-dependencies = [
    "mypy==1.13.0",
    "pre-commit==4.0.1",
    "pytest-asyncio==0.24.0",
    "pytest-clarity==1.0.1",
    "pytest-cov==6.0.0",
    "pytest-random-order==1.1.1",
    "pytest-sugar==1.0.0",
    "pytest==8.3.4",
    "ruff==0.11.0",
    "types-beautifulsoup4==4.12.0.20241020",
]

[tool.aerich]
tortoise_orm = "src.utils.db_manager.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = ["-vv", "--random-order"]

[tool.coverage.run]
omit = ['__init__.py', '.venv/*', '*/migrations/*', '*_test.py']

[tool.coverage.report]
skip_empty = true

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
    ".eggs",
    ".git",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    ".venv",
    "migrations",
    "grog.py",
]
lint.ignore = [
    "B008",    # function-call-in-default-argument (B008)
    "S101",    # Use of `assert` detected
    "RET504",  # Unnecessary variable assignment before `return` statement
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "ARG001",  # Unused function argument: `{name}`
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "ISC001",  # Checks for implicitly concatenated strings on a single line
    "BLE001",  # Checks for `except` clauses that catch all exceptions.
    "COM812",  # Checks for the absence of trailing commas.
]
lint.select = [
    "A",     # flake8-builtins
    "B",     # flake8-bugbear
    "E",     # pycodestyle
    "F",     # Pyflakes
    "N",     # pep8-naming
    "RET",   # flake8-return
    "S",     # flake8-bandit
    "W",     # pycodestyle
    "Q",     # flake8-quotes
    "C90",   # mccabe
    "I",     # isort
    "UP",    # pyupgrade
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "PT",    # flake8-pytest-style
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "SIM",   # flake8-simplify
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate
    "NPY",   # NumPy-specific rules
    "PL",    # Pylint
    "PLE",   # Pylint
    "PLR",   # Pylint
    "PLW",   # Pylint
    "PLC",   # Pylint
    "RUF",   # Ruff-specific rules
    "PD",    # pandas-vet
    "FAST",  # FastAPI
    "ERA",   # eradicate
    "TID",   # flake8-tidy-imports
    "COM",   # flake8-commas
    "ASYNC", # flake8-async
    "ANN",   # flake8-annotations
    "FURB",  # refurb
    "PERF",  # Perflint
]
