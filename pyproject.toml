[project]
name = "dominions-slack-bot"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aerich==0.7.2",
    "aiohappyeyeballs==2.4.3",
    "aiohttp==3.10.5",
    "beautifulsoup4==4.12.3",
    "cryptography==42.0.8",
    "loguru==0.7.2",
    "pydantic==2.7.4",
    "python-dotenv==1.0.1",
    "slack-bolt==1.20.0",
    "tortoise-orm[asyncmy]==0.21.6",
    "uvloop==0.19.0",
]

[tool.uv]
dev-dependencies = [
    "mypy==1.11.1",
    "pre-commit==3.8.0",
    "pytest-asyncio==0.23.7",
    "pytest-clarity==1.0.1",
    "pytest-cov==5.0.0",
    "pytest-random-order==1.1.1",
    "pytest-sugar==1.0.0",
    "pytest==8.2.2",
    "ruff==0.6.8",
    "types-beautifulsoup4==4.12.0.20240511",
]

[tool.aerich]
tortoise_orm = "src.utils.db_manager.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "-vv --random-order"

[tool.coverage.run]
omit = ['__init__.py', '.venv/*', '*/migrations/*', '*_test.py']

[tool.coverage.report]
skip_empty = true

[tool.ruff]
line-length = 120
fix = true
format.docstring-code-format = true
format.docstring-code-line-length = 80
lint.ignore = [
    "B008",    # function-call-in-default-argument (B008)
    "S101",    # Use of `assert` detected
    "RET504",  # Unnecessary variable assignment before `return` statement
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "ARG001",  # Unused function argument: `{name}`
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "E501",    # Checks for lines that exceed the specified maximum character length. / the dumb grog messages are too long
    "F401",    # Checks for unused imports. / causes issues with init.py bundling modules
    "ISC001",  # hecks for implicitly concatenated strings on a single line.
    "BLE001",
]
lint.select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "E",   # pycodestyle
    "F",   # Pyflakes
    "N",   # pep8-naming
    "RET", # flake8-return
    "S",   # flake8-bandit
    "W",   # pycodestyle
    "Q",   # flake8-quotes
    "C90", # mccabe
    "I",   # isort
    "UP",  # pyupgrade
    "BLE", # flake8-blind-except
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PT",  # flake8-pytest-style
    "PIE", # flake8-pie
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # Pylint
    "NPY", # NumPy-specific rules
    "PLE", # Pylint
    "PLR", # Pylint
    "PLW", # Pylint
    "RUF", # Ruff-specific rules
    "PD",  # pandas-vet
]
exclude = [
    ".eggs",
    ".git",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    ".venv",
]
